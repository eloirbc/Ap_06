<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>